{
	saveattribute = DataReader(f"queries/GetPersonAttributeByNamevalue.sql", connection = "stortneer") {
		none->DataWriter(f"queries/AddPersonAttribute.sql", connection = "stortneer") {
			changed_0->Template(f"templates/attributenotsaved.html");
			default->Template(f"templates/attributesaved.html");
		};
		single->Template(f"templates/attributeunchanged.html");
	};

	successful = Template(f"templates/successful.html") {
		state->saveattribute;
		field-><f"view.conf@field">;
	};

	failure = FailCheck() & Template(f"templates/failure.html") {
		state-><f"texts/errors.conf">(branchvariable = "name");
		field-><f"view.conf@field">;
	};

	instances = {
		updatepersonattribute = saveattribute;

		loginperson = DataReader(f"queries/GetLoginPerson.sql", connection = "stortneer") {
			none->DataReader(f"queries/AddLoginPerson.sql", connection = "stortneer") {
				single->Return("person");
			};
			single->Return("person");
		};

		optionalfield = TextField(pattern = "^.{0,100}$") {
			successful->successful; failure->failure;
		};

		namefield = NameField(required = true) {
			successful->successful;	failure->failure;
		};

		phonefield = TextField(required = true, pattern = "^.{5,18}$") {
			successful->successful; failure->failure;
		};

		emailfield = EmailField(required = true) {
			successful->successful; failure->failure;
		};

		validate = DataWriter(f"queries/SetPersonValid.sql", connection = "stortneer");

		invalidate = DataWriter(f"queries/SetPersonInvalid.sql", connection = "stortneer");
	};
}