{
	personbyattr = f"../person/view.conf@byattributevalue";

	settoken = { value = "token" };

	teammembers = <personbyattr>(
				view = "simple", name = "token", remap = settoken);
	messages = {
		notsaved = Translation(f"templates-%s/notsaved.html", locales = ["en", "nl"]);
		saved = Translation(f"templates-%s/saved.html", locales = ["en", "nl"]);
	};

	saveteam = DataReader(f"queries/GetTeamByName.sql", connection = "stortneer") {
		none->DataWriter(f"queries/SetTeamName.sql", connection = "stortneer") {
			changed_0->messages.notsaved; changed_1->messages.saved;
		};
		single->Translation(f"templates-%s/notunique.html", locales = ["en", "nl"]);
	};

	editteam = HttpMethod() {
		get->Translation(f"templates-%s/viewteam.html", locales = ["en", "nl"]) {
			form->Translation(f"templates-%s/titleform.html", locales = ["en", "nl"]);
			members->teammembers;
		};
		post->Translation(f"templates-%s/viewteam.html", locales = ["en", "nl"]) {
			form->WwwForm(fieldlist = ["title"]) {
				title->NameField(required = true) {
					successful->saveteam;
					failure->Translation(f"templates-%s/teamnamerequired.html", locales = ["en", "nl"]);
				};
				mapped->Translation(f"templates-%s/titleform.html", locales = ["en", "nl"]);
			};
			members->teammembers;
		};
	};

	viewteam = Translation(f"templates-%s/teamitem.html", locales = ["en", "nl"]) {
		members-><personbyattr>(
			view = "extended", name = "token", remap = settoken);
	};

	instances = {
		enteredlist = DataReader(f"queries/GetEnteredTeams.sql", connection = "stortneer") {
			iterator->Return("entereditem") {
				default->Translation(f"templates-%s/stagebutton.html", locales = ["en", "nl"]) {
					team->viewteam;
				};
			};
		};

		admin = HttpMethod() {
			get->Translation(f"templates-%s/teamlist.html", locales = ["en", "nl"]) {
				entered->instances.enteredlist;
				staged->DataReader(f"queries/GetStagedTeams.sql", connection = "stortneer") {
					iterator->Translation(f"templates-%s/enterbutton.html", locales = ["en", "nl"]) {
						team->viewteam;
					};
				};
			};
			post->Check() {
				subject->WwwForm(fieldlist = ["id"]) {
					id->NumberField(required = true) {
						failure->FailCheck(); successful->StubService();
					};
					mapped->CheckCheck() {
						successful->Dir() {
							enter->DataWriter(f"queries/SetTeamEntered.sql", connection = "stortneer") {
								changed_0->messages.notsaved; changed_1->messages.saved;
							};
							unenter->DataWriter(f"queries/ResetTeamEntered.sql", connection = "stortneer") {
								changed_0->messages.notsaved; changed_1->messages.saved;
							};
							purge->DataWriter(f"queries/PurgeTeam.sql", connection = "stortneer") {
								changed_0->messages.notsaved; changed_1->messages.saved;
							};
						};
					};
				};
			};
		};

		create = DataReader(f"queries/ProduceToken.sql", connection = "stortneer") {
			single->DataReader(f"queries/GetTeamByToken.sql", connection = "stortneer") {
				none-><f"../person/control.conf@updatepersonattribute">(
					name = "token", remap = { value = "token" }
				) & DataReader(f"queries/AddTeam.sql", connection = "stortneer") {
					single->editteam;
				};
				single-><f"main.conf@create">;
			};
		};

		modify = DataReader(f"queries/GetTeamByToken.sql", connection = "stortneer") {
			none->instances.create;
			single->editteam;
		};
	};
}
