{
	personbyattr = f"../person/view.conf@byattributevalue";

	settoken = { value = "token" };

	teammembers = <personbyattr>(
				view = "simple", name = "token", remap = settoken);

	saveteam = DataReader(f"queries/GetTeamByName.sql", connection = "stortneer") {
		none->DataWriter(f"queries/SetTeamName.sql", connection = "stortneer") {
			changed_0->Template(f"templates/notsaved.html");
			changed_1->Template(f"templates/saved.html");
		};
		single->Template(f"templates/notunique.html");
	};

	editteam = HttpMethod() {
		get->Template(f"templates/viewteam.html") {
			form->Template(f"templates/titleform.html");
			members->teammembers;
		};
		post->Template(f"templates/viewteam.html") {
			form->WwwForm(fieldlist = ["title"]) {
				title->NameField(required = true) {
					successful->saveteam;
					failure->Template(f"templates/teamnamerequired.html");
				};
				mapped->Template(f"templates/titleform.html");
			};
			members->teammembers;
		};
	};

	instances = {
		list = Template(f"templates/teamlist.html") {
			items->DataReader(f"queries/GetTeams.sql", connection = "stortneer") {
				iterator->Template(f"templates/teamitem.html") {
					members-><personbyattr>(
						view = "extended", name = "token", remap = settoken);
				};
			};
		};

		create = DataReader(f"queries/ProduceToken.sql", connection = "stortneer") {
			single->DataReader(f"queries/GetTeamByToken.sql", connection = "stortneer") {
				none-><f"../person/control.conf@updatepersonattribute">(
					name = "token", remap = { value = "token" }
				) & DataReader(f"queries/AddTeam.sql", connection = "stortneer") {
					single->editteam;
				};
				single-><f"main.conf@create">;
			};
		};

		modify = DataReader(f"queries/GetTeamByToken.sql", connection = "stortneer") {
			none->instances.create;
			single->editteam;
		};
	};
}