{
	checkpermission = f"perm/ission.conf@check";
	person = f"person/main.conf";

	accessdenied = Template(f"templates/accessdenied.html");

	wiki = <f"wiki/agwiki.conf@begin">(baseurl = "") {
		appendform-><checkpermission>(resource = "wiki", action = "import") {
			granted->Template(f"templates/importscript.html");
			denied->StubService();
		};
		appendcreate-><checkpermission>(resource = "wiki", action = "import") {
			granted->Template(f"templates/importframe.html") {
				list-><f"import/main.conf@list">;
			};
			denied->StubService();
		};
	};

	content = Dir() {
		default->wiki;
		register-><checkpermission>(resource = "self", action = "create") {
			granted-><f"login/auth.conf@register">(username = "", password = "") {
				registerformheader->Template(f"templates/login-registerformheader.html");
				authenticated->Template(f"templates/person-registerformheader.html") & <person>(branch = "new");
			};
			denied-><checkpermission>(resource = "self", action = "modify") {
				granted->Template(f"templates/person-registerformheader.html") & <person>(branch = "modify");
			};
		};
		self-><checkpermission>(resource = "self", action = "modify") {
			granted-><person>(branch = "modify");
		};
		team-><checkpermission>(resource = "self", action = "view") {
			granted-><f"person/view.conf@field">(name = "token") {
				nothing-><checkpermission> (resource = "ownteam", action = "create") {
					granted-><f"team/main.conf@create">;
				};
				something-><checkpermission> (resource = "ownteam", action = "modify") {
					granted-><f"team/main.conf@modify">(remap = { token = "value" });
				};
			};
		};
		login-><checkpermission>(resource = "session", action = "create") {
			granted-><f"login/auth.conf@identify"> {
				authenticated->Template(f"templates/loggedin.html");
			};
		};
		controlpanel-><checkpermission>(resource = "user", action = "controlpanel") {
			granted-><f"controlpanel.conf@begin">;
		};
		score-><checkpermission>(resource = "scoreboard", action = "view") {
			granted-><f"score/view.conf@begin">;
		};
	};


	application = Dir() {
		default-><f"skelet.conf@on"> {
			content->content;
		};

		static->Fileserver(f"static");

		import-><checkpermission>(resource = "wiki", action = "import") {
			granted-><f"import/main.conf@get">;
		};

		logout-><f"skelet.conf@logout">;
	};
	
	#include f"database/connection.credentials";

	instances = {
		connectors = 
			Connector(name = "stortneer", connectionstring = dbcon) & 
			Connector(name = "agwiki", connectionstring = dbcon) & 
			Connector(name = "aglogin", connectionstring = dbcon) & 
			Connector(name = "agperm", connectionstring = dbcon);

		begin = <f"login/auth.conf@enticate">(
			login = -1, username = "guest"
		) {
			authenticated-><f"person/control.conf@loginperson"> {
				person->application;
			};
			unauthenticated->application;
		};
	};
}
